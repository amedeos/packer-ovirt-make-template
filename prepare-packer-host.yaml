---
- name: 'Setup packer host'
  hosts: packer
  become: False
  vars_files:
    - variables-vault.yaml
    - variables.yaml

  tasks:
  - name: Enable virt module
    shell: |
      dnf module enable virt -y
    changed_when: False

  - name: Run distrosync
    shell: |
      dnf distro-sync -y
    changed_when: False

  - name: Install required packages
    dnf:
      name:
        - bash-completion
        - vim
        - tmux
        - libguestfs
        - libguestfs-tools
        - unzip
        - tigervnc
        - '@Server with GUI'
      state: present

  - name: Set graphical boot
    shell: |
      systemctl set-default graphical.target
    changed_when: False

  - name: Get packer zip
    get_url:
      url: "{{ packer_url }}"
      dest: "/root/{{ packer_zip }}"
      checksum: "sha256:{{ packer_checksum }}"
    register: packer_download

  - name: Check packer bin
    stat:
      path: "/root/packer"
    register: packer_bin

  - name: remove older packer
    file:
      path: /root/packer
      state: absent
    when: packer_download.changed

  - name: unarchive packer
    unarchive:
      src: "/root/{{ packer_zip }}"
      dest: "/root"
      remote_src: True
    when: packer_download.changed or not packer_bin.stat.exists

  - name: Remove directories
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ packer_output_dir }}"
      - "{{ packer_template_dir }}"

  - name: Create directories
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - "{{ packer_template_dir }}"
      - "{{ packer_template_dir }}/ansible"
      - "{{ packer_template_dir }}/http"

  - name: Copy templates
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - { src: "rhel8.json", dest: "{{ packer_template_dir }}/rhel8.json"}
      - { src: "ansible/vm-cleanup.yaml", dest: "{{ packer_template_dir }}/ansible/vm-cleanup.yaml"}
      - { src: "ansible/vm-customize.yaml", dest: "{{ packer_template_dir }}/ansible/vm-customize.yaml"}
      - { src: "http/ks-rhel8.cfg", dest: "{{ packer_template_dir }}/http/ks-rhel8.cfg"}

  - name: Replace value in templates
    replace:
      path: "{{ item.path }}"
      regexp: "{{ item.regexp }}"
      replace: "{{ item.replace }}"
    no_log: True
    with_items:
      - { path: "{{ packer_template_dir }}/rhel8.json", regexp: "SECRETPASSWORD", replace: "{{ vm_password }}" }
      - { path: "{{ packer_template_dir }}/http/ks-rhel8.cfg", regexp: "SECRETPASSWORD", replace: "{{ vm_password }}" }
      - { path: "{{ packer_template_dir }}/rhel8.json", regexp: "VERSIONISO", replace: "{{ packer_version_iso }}" }
      - { path: "{{ packer_template_dir }}/rhel8.json", regexp: "ISOCHECKSUM", replace: "sha256:{{ packer_iso_checksum }}" }
      - { path: "{{ packer_template_dir }}/rhel8.json", regexp: "ISOURL", replace: "{{ packer_iso }}" }

  - name: Validate the template
    shell: |
      cd {{ packer_template_dir }}
      /root/packer validate rhel8.json
    environment:
      - LIBGUESTFS_BACKEND: direct
      - PACKER_CACHE_DIR: /var/cache/packer_cache
